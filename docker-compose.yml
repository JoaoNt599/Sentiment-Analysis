version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: always
    networks:
      - app-network
  
  kafka:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"      # Externo
      - "29092:29092"    # Interno
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: "true"
      KAFKA_BROKER: "kafka:29092"
    restart: always
    networks:
      - app-network

  fastapi:
    build:
      context: ./backend
      dockerfile: Dockerfile.fast_api
    environment:
      PYTHONPATH: "/app"
      MONGO_URI: "mongodb://mongodb:27017"
      KAFKA_BROKER: "kafka:29092"
    container_name: fastapi
    ports:
      - "8000:8000"
    restart: always
    networks:
      - app-network
  
  streamlit:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    networks:
      - app-network
    environment:
      - FASTAPI_HOST=fastapi
      - MONGO_URI=mongodb://mongodb:27017
    depends_on:
      - fastapi
      - mongodb
  
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    restart: always
    networks:
      - app-network
  
  kowl:
    image: quay.io/cloudhut/kowl:latest
    container_name: kowl
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKERS=kafka:29092
    restart: always
    networks:
      - app-network
  kafka_consumer:
    build:
      context: ./backend
      dockerfile: Dockerfile.kafka_consumer
    container_name: kafka_consumer
    depends_on:
      - kafka
      - mongodb
    restart: always
    networks:
      - app-network
    environment:
      MONGO_URI: "mongodb://mongodb:27017"
      KAFKA_BROKER: "kafka:29092"
  
  redis:
    image: redis:7
    container_name: redis_app
    ports:
      - "6379:6379"
    restart: always
    networks:
      - app-network
  
  login:
    build:
      context: ./frontend
      dockerfile: Dockerfile.login_page
    container_name: login_app
    ports:
      - "8502:8502"
    restart: always
    networks:
      - app-network
    depends_on:
      - redis

networks:
  app-network:
    driver: bridge
  
  